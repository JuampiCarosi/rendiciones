generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Example {
  id String @id @default(cuid())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  isAdmin       Boolean   @default(false)
  isBanker      Boolean   @default(false)
  isEmployee    Boolean   @default(true)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Ticket {
  id            String   @id @default(cuid())
  ticketId      Int
  invoiceType   String
  description   String
  amount        Float
  invoiceDate   DateTime
  costCenter    String
  userName      String
  expenseType   String
  pettyCashDate DateTime
  userId        String
}

model Movements {
  id            String   @id @default(cuid())
  date          DateTime
  amount        Float
  description   String
  fromUser      String
  toUser        String
  pettyCashDate DateTime
  isFromBank    Boolean  @default(false)
  madeBy        String
}

model CostCenters {
  id         Int    @id @default(autoincrement())
  name       String @db.VarChar(255)
  isFinished Int    @default(0)
}
